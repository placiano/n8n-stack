services:
  postgres:
    image: pgvector/pgvector:0.8.0-pg17
    container_name: postgres-n8n
    restart: unless-stopped
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      n8n_network:
        aliases:
          - postgres

  evolution-api:
    container_name: evolution-api-n8n
    build:
      context: .
      dockerfile: Dockerfile.evolution
    restart: always
    ports:
      - 8088:8080
    volumes:
      - lab_evolution_instances:/lab_evolution/instances
      - ./scripts:/scripts:ro
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - ngrok
    networks:
      - n8n_network

  ngrok:
    image: ngrok/ngrok:alpine
    container_name: ngrok-n8n
    restart: always
    ports:
      - "4041:4040"  # interfaz web de ngrok
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    env_file:
      - .env
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
      - ./scripts/ngrok-healthcheck.sh:/ngrok-healthcheck.sh:ro
    command: start --all --config /etc/ngrok.yml
    healthcheck:
      test: ["CMD", "/ngrok-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - n8n_network

  redis:
    image: bitnami/redis:latest
    container_name: redis-n8n
    restart: always
    env_file:
      - .env
    ports:
      - "6381:6379"
    networks:
      - n8n_network
    volumes:
      - 'redis_data:/bitnami/redis/data'

  adminer:
    image: adminer
    container_name: adminer-n8n
    restart: always
    ports:
      - "8082:8080"
    depends_on:
      - postgres
    networks:
      - n8n_network

  n8n:
    build:
      context: .
      dockerfile: Dockerfile.n8n
    container_name: n8n-app
    restart: always
    ports:
      - 5679:5678
    env_file:
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
      - ./scripts:/scripts:ro
    depends_on:
      - postgres
      - ngrok
    networks:
      - n8n_network

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  lab_evolution_instances:
    driver: local
  redis_data:
    driver: local

networks:
  n8n_network:
    driver: bridge